/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.frkator.test.results.diff;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.MethodSource;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;
import java.util.Properties;
import java.util.stream.Stream;

class CaseReportTest {

    private static Stream<org.junit.jupiter.params.provider.Arguments> testInput() {
        return Stream.of(
               create(
                       true,
                       false,true,true,
                       null,true,true,
                       "src/test/resources/byte-buddy-1",
                       "src/test/resources/byte-buddy-2",
                       "only left\n" +
                               "net.bytebuddy.agent.AttacherTest [4/0/0/0]\n" +
                               "net.bytebuddy.agent.AttacherTest.testPseudoAttachmentEmptyArgument:passed\n" +
                               "net.bytebuddy.agent.AttacherTest.testConstructorThrowsException:passed\n" +
                               "net.bytebuddy.agent.AttacherTest.testPseudoAttachmentMissingArgument:passed\n" +
                               "net.bytebuddy.agent.AttacherTest.testPseudoAttachment:passed\n" +
                               "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest [5/0/0/0]\n" +
                               "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testUnavailableAccessor:passed\n" +
                               "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testSimpleAccessor:passed\n" +
                               "\n" +
                               "only right\n" +
                               "net.bytebuddy.agent.ByteBuddyAgentAgentProviderTest [2/0/0/0]\n" +
                               "net.bytebuddy.agent.ByteBuddyAgentAgentProviderTest.testKnownAccessor:passed\n" +
                               "net.bytebuddy.agent.ByteBuddyAgentAgentProviderTest.testKnownAgent:passed\n"+
                               "\n"
               ),
                create(
                        true,
                        false,true,true,null,false,false,
                        "src/test/resources/byte-buddy-1",
                        "src/test/resources/byte-buddy-2",
                        "only left\n" +
                                "\n" +
                                "only right\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest [5/2/0/0]\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testUnavailableAccessor:java.lang.AssertionError\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testSimpleAccessor:java.lang.AssertionError\n" +
                                "\n"
                ),
                create(
                        true,
                        true,true,true,
                        null,null,null,
                        "src/test/resources/byte-buddy-1",
                        "src/test/resources/byte-buddy-2",
                        "only left\n" +
                                "net.bytebuddy.agent.AttacherTest [4/0/0/0]\n" +
                                "net.bytebuddy.agent.AttacherTest.testPseudoAttachmentEmptyArgument:passed\n" +
                                "net.bytebuddy.agent.AttacherTest.testConstructorThrowsException:passed\n" +
                                "net.bytebuddy.agent.AttacherTest.testPseudoAttachmentMissingArgument:passed\n" +
                                "net.bytebuddy.agent.AttacherTest.testPseudoAttachment:passed\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest [5/0/0/0]\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testUnavailableAccessor:passed\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testSimpleAccessor:passed\n" +
                                "\n" +
                                "only right\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAgentProviderTest [2/0/0/0]\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAgentProviderTest.testKnownAccessor:passed\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAgentProviderTest.testKnownAgent:passed\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest [5/2/0/0]\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testUnavailableAccessor:java.lang.AssertionError\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testSimpleAccessor:java.lang.AssertionError\n" +
                                "\n" +
                                "common\n" +
                                "net.bytebuddy.asm.AdviceArgumentHandlerCopyingTest [9/0/0/0]\n" +
                                "net.bytebuddy.asm.AdviceArgumentHandlerCopyingTest.testLongExitOnlyMethodAssignment:passed\n" +
                                "net.bytebuddy.asm.AdviceArgumentHandlerCopyingTest.testLongMethod:passed\n" +
                                "net.bytebuddy.asm.AdviceArgumentHandlerCopyingTest.testShortExitOnlyMethod:passed\n" +
                                "net.bytebuddy.asm.AdviceArgumentHandlerCopyingTest.testShortMethodAssignment:passed\n" +
                                "net.bytebuddy.asm.AdviceArgumentHandlerCopyingTest.testShortMethod:passed\n" +
                                "net.bytebuddy.asm.AdviceArgumentHandlerCopyingTest.testLongMethodAssignment:passed\n" +
                                "net.bytebuddy.asm.AdviceArgumentHandlerCopyingTest.testConstructorNotSupported:passed\n" +
                                "net.bytebuddy.asm.AdviceArgumentHandlerCopyingTest.testLongExitOnlyMethod:passed\n" +
                                "net.bytebuddy.asm.AdviceArgumentHandlerCopyingTest.testShortExitOnlyMethodAssignment:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest [42/0/0/0]\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[0]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[0]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[0]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[1]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[1]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[1]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[2]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[2]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[2]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[3]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[3]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[3]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[4]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[4]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[4]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[5]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[5]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[5]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[6]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[6]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[6]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[7]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[7]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[7]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[8]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[8]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[8]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[9]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[9]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[9]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[10]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[10]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[10]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[11]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[11]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[11]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[12]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[12]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[12]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testDocumented[13]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testVisible[13]:passed\n" +
                                "net.bytebuddy.asm.AdviceAnnotationTest.testTarget[13]:passed\n" +
                                "net.bytebuddy.agent.builder.AgentBuilderCircularityLockTest [4/0/0/0]\n" +
                                "net.bytebuddy.agent.builder.AgentBuilderCircularityLockTest.testGlobalLock:passed\n" +
                                "net.bytebuddy.agent.builder.AgentBuilderCircularityLockTest.testCircularityLockDefault:passed\n" +
                                "net.bytebuddy.agent.builder.AgentBuilderCircularityLockTest.testCircularityLockInactive:passed\n" +
                                "net.bytebuddy.agent.builder.AgentBuilderCircularityLockTest.testGlobalLockWithTimeout:passed\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest [5/0/0/0]\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testSimpleAccessorWithoutExternalAttachment:passed\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testUnavailableAccessorThrowsExceptionForType:passed\n" +
                                "net.bytebuddy.agent.ByteBuddyAgentAttachmentProviderTest.testUnavailableAccessorThrowsExceptionForExternalAttachment:passed\n" +
                                "\n"
                )
        );
    }

    private static org.junit.jupiter.params.provider.Arguments create(Boolean verbose,
                                                                      Boolean showCommon, Boolean showLeft, Boolean showRight,
                                                                      Boolean filterCommon, Boolean filterLeft, Boolean filterRight,
                                                                      String path1, String path2,String expectedResult)  {
        try {
            Properties properties = new PropertiesFactory().create(verbose,showCommon,showLeft,showRight,filterCommon,filterLeft,filterRight);
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            App app = new App(
                    new Arguments(new String[]{path1,path2}),
                    new PrintStream(byteArrayOutputStream),
                    new Settings(properties)
            );
            return org.junit.jupiter.params.provider.Arguments.of(
                    byteArrayOutputStream,
                    app,
                    properties,
                    expectedResult
            );
        }
        catch (Exception e) {
            throw new RuntimeException("initialization error", e);
        }
    }

    @ParameterizedTest
    @MethodSource("testInput")
    void test(ByteArrayOutputStream actualResult,App app, Properties properties, String expectedResult) {
        new CaseReport(app).process();
        Assertions.assertEquals(expectedResult,actualResult.toString());
    }

}
